{"uid":"b29b09a2418ca138","name":"test_front_size_grip[200-100]","fullName":"tests.gui.test_front#test_front_size_grip","historyId":"bf883eb90b81d28287d53e5bf0be2213","time":{"start":1666001772220,"stop":1666001773905,"duration":1685},"status":"failed","statusMessage":"AssertionError","statusTrace":"setup = None, teardown = None, offset_x = 200, offset_y = 100\n\n    @allure.feature('Test gui')\n    @allure.story('Check that the window size changes by SizeGrip')\n    @pytest.mark.parametrize(\"offset_x, offset_y\", [(200, 100), (-200, -100)])\n    def test_front_size_grip(setup, teardown, offset_x, offset_y):\n    \n        with allure.step(\"Take a screenshot\"):\n            img = pyautogui.screenshot(screenshots[0], region=DEFAULT_APP_REGION)\n            allure_attach_screenshot(img)\n    \n        with allure.step(\"Click and drag by SizeGrip\"):\n            size_grip_pos = get_new_position(DEFAULT_APP_REGION,\n                                             SIZE_GRIP_CLICK_POINT)\n            pyautogui.moveTo(size_grip_pos)\n            pyautogui.dragTo(get_new_position(size_grip_pos, (offset_x, offset_y)))\n    \n        with allure.step(\"Take a screenshot\"):\n            img = pyautogui.screenshot(screenshots[1], region=DEFAULT_APP_REGION)\n            allure_attach_screenshot(img)\n    \n        with allure.step(\"Compare screenshots\"):\n>           assert_screenshots(False)\n\ntests/gui/test_front.py:101: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/methods/utils.py:47: in assert_screenshots\n    raise e\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsame = False\n\n    def assert_screenshots(same):\n        \"\"\" Assert screenshots pair and remove them \"\"\"\n        try:\n>           assert images_are_similar(*screenshots) == same\nE           AssertionError\n\ntests/methods/utils.py:45: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"setup","time":{"start":1666001767095,"stop":1666001772217,"duration":5122},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"teardown","time":{"start":1666001772218,"stop":1666001772218,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"status":"failed","statusMessage":"AssertionError","statusTrace":"setup = None, teardown = None, offset_x = 200, offset_y = 100\n\n    @allure.feature('Test gui')\n    @allure.story('Check that the window size changes by SizeGrip')\n    @pytest.mark.parametrize(\"offset_x, offset_y\", [(200, 100), (-200, -100)])\n    def test_front_size_grip(setup, teardown, offset_x, offset_y):\n    \n        with allure.step(\"Take a screenshot\"):\n            img = pyautogui.screenshot(screenshots[0], region=DEFAULT_APP_REGION)\n            allure_attach_screenshot(img)\n    \n        with allure.step(\"Click and drag by SizeGrip\"):\n            size_grip_pos = get_new_position(DEFAULT_APP_REGION,\n                                             SIZE_GRIP_CLICK_POINT)\n            pyautogui.moveTo(size_grip_pos)\n            pyautogui.dragTo(get_new_position(size_grip_pos, (offset_x, offset_y)))\n    \n        with allure.step(\"Take a screenshot\"):\n            img = pyautogui.screenshot(screenshots[1], region=DEFAULT_APP_REGION)\n            allure_attach_screenshot(img)\n    \n        with allure.step(\"Compare screenshots\"):\n>           assert_screenshots(False)\n\ntests/gui/test_front.py:101: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/methods/utils.py:47: in assert_screenshots\n    raise e\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsame = False\n\n    def assert_screenshots(same):\n        \"\"\" Assert screenshots pair and remove them \"\"\"\n        try:\n>           assert images_are_similar(*screenshots) == same\nE           AssertionError\n\ntests/methods/utils.py:45: AssertionError","steps":[{"name":"Take a screenshot","time":{"start":1666001772220,"stop":1666001772863,"duration":643},"status":"passed","steps":[],"attachments":[{"uid":"918978f700eab79a","name":"Screenshot","source":"918978f700eab79a.png","type":"image/png","size":4681}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":false,"hasContent":true},{"name":"Click and drag by SizeGrip","time":{"start":1666001772863,"stop":1666001773087,"duration":224},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Take a screenshot","time":{"start":1666001773087,"stop":1666001773869,"duration":782},"status":"passed","steps":[],"attachments":[{"uid":"a7a953c7d7d54c35","name":"Screenshot","source":"a7a953c7d7d54c35.png","type":"image/png","size":4681}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":false,"hasContent":true},{"name":"Compare screenshots","time":{"start":1666001773869,"stop":1666001773904,"duration":35},"status":"failed","statusMessage":"AssertionError\n","statusTrace":"  File \"/home/runner/work/mic_spectrum_analyser/mic_spectrum_analyser/tests/gui/test_front.py\", line 101, in test_front_size_grip\n    assert_screenshots(False)\n  File \"/home/runner/work/mic_spectrum_analyser/mic_spectrum_analyser/tests/methods/utils.py\", line 47, in assert_screenshots\n    raise e\n  File \"/home/runner/work/mic_spectrum_analyser/mic_spectrum_analyser/tests/methods/utils.py\", line 45, in assert_screenshots\n    assert images_are_similar(*screenshots) == same\n","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true}],"attachments":[],"parameters":[],"stepsCount":4,"attachmentsCount":2,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"teardown::0","time":{"start":1666001773943,"stop":1666001774052,"duration":109},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"story","value":"Check that the window size changes by SizeGrip"},{"name":"feature","value":"Test gui"},{"name":"parentSuite","value":"tests.gui"},{"name":"suite","value":"test_front"},{"name":"host","value":"fv-az28-616"},{"name":"thread","value":"2822-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.gui.test_front"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"offset_x","value":"200"},{"name":"offset_y","value":"100"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"b29b09a2418ca138.json","parameterValues":["200","100"]}