{"uid":"abb0c12222b4fd33","name":"test_front_close_button","fullName":"tests.gui.test_front#test_front_close_button","historyId":"c16507a92b07ae1962ba5aef5ceb8172","time":{"start":1666003565920,"stop":1666003567278,"duration":1358},"status":"failed","statusMessage":"AssertionError","statusTrace":"setup = None\n\n    @allure.feature('Test front')\n    @allure.story('Check that the window closes by click the close button')\n    def test_front_close_button(setup):\n    \n        with allure.step(\"Take a screenshot\"):\n            img = pyautogui.screenshot(screenshots[0], region=DEFAULT_APP_REGION)\n            allure_attach_screenshot(img)\n    \n        with allure.step(\"Click the close button\"):\n            pyautogui.click(get_new_position(DEFAULT_APP_REGION,\n                                             CLOSE_BUTTON_CLICK_POINT))\n    \n        with allure.step(\"Take a screenshot\"):\n            img = pyautogui.screenshot(screenshots[1], region=DEFAULT_APP_REGION)\n            allure_attach_screenshot(img)\n    \n        with allure.step(\"Compare screenshots\"):\n>           assert_screenshots(False)\n\ntests/gui/test_front.py:55: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/methods/utils.py:48: in assert_screenshots\n    raise e\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsame = False\n\n    def assert_screenshots(same):\n        \"\"\" Assert screenshots pair and remove them \"\"\"\n        try:\n>           assert images_are_similar(*screenshots) == same\nE           AssertionError\n\ntests/methods/utils.py:46: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"setup","time":{"start":1666003564813,"stop":1666003565918,"duration":1105},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"status":"failed","statusMessage":"AssertionError","statusTrace":"setup = None\n\n    @allure.feature('Test front')\n    @allure.story('Check that the window closes by click the close button')\n    def test_front_close_button(setup):\n    \n        with allure.step(\"Take a screenshot\"):\n            img = pyautogui.screenshot(screenshots[0], region=DEFAULT_APP_REGION)\n            allure_attach_screenshot(img)\n    \n        with allure.step(\"Click the close button\"):\n            pyautogui.click(get_new_position(DEFAULT_APP_REGION,\n                                             CLOSE_BUTTON_CLICK_POINT))\n    \n        with allure.step(\"Take a screenshot\"):\n            img = pyautogui.screenshot(screenshots[1], region=DEFAULT_APP_REGION)\n            allure_attach_screenshot(img)\n    \n        with allure.step(\"Compare screenshots\"):\n>           assert_screenshots(False)\n\ntests/gui/test_front.py:55: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/methods/utils.py:48: in assert_screenshots\n    raise e\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsame = False\n\n    def assert_screenshots(same):\n        \"\"\" Assert screenshots pair and remove them \"\"\"\n        try:\n>           assert images_are_similar(*screenshots) == same\nE           AssertionError\n\ntests/methods/utils.py:46: AssertionError","steps":[{"name":"Take a screenshot","time":{"start":1666003565920,"stop":1666003566530,"duration":610},"status":"passed","steps":[],"attachments":[{"uid":"912eb9c20cf16623","name":"Screenshot","source":"912eb9c20cf16623.png","type":"image/png","size":4681}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":false,"hasContent":true},{"name":"Click the close button","time":{"start":1666003566530,"stop":1666003566640,"duration":110},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Take a screenshot","time":{"start":1666003566640,"stop":1666003567250,"duration":610},"status":"passed","steps":[],"attachments":[{"uid":"b5883e3ec2fda190","name":"Screenshot","source":"b5883e3ec2fda190.png","type":"image/png","size":4681}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":false,"hasContent":true},{"name":"Compare screenshots","time":{"start":1666003567250,"stop":1666003567277,"duration":27},"status":"failed","statusMessage":"AssertionError\n","statusTrace":"  File \"/home/runner/work/mic_spectrum_analyser/mic_spectrum_analyser/tests/gui/test_front.py\", line 55, in test_front_close_button\n    assert_screenshots(False)\n  File \"/home/runner/work/mic_spectrum_analyser/mic_spectrum_analyser/tests/methods/utils.py\", line 48, in assert_screenshots\n    raise e\n  File \"/home/runner/work/mic_spectrum_analyser/mic_spectrum_analyser/tests/methods/utils.py\", line 46, in assert_screenshots\n    assert images_are_similar(*screenshots) == same\n","steps":[],"attachments":[{"uid":"e59256283f83608d","name":"diff","source":"e59256283f83608d.txt","type":"text/plain","size":4}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true}],"attachments":[],"parameters":[],"stepsCount":4,"attachmentsCount":3,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"feature","value":"Test front"},{"name":"story","value":"Check that the window closes by click the close button"},{"name":"parentSuite","value":"tests.gui"},{"name":"suite","value":"test_front"},{"name":"host","value":"fv-az502-785"},{"name":"thread","value":"2887-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.gui.test_front"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":3,"broken":2,"skipped":0,"passed":0,"unknown":0,"total":5},"items":[{"uid":"a3a2a969c190aa66","reportUrl":"https://dmncmn.github.io/mic_spectrum_analyser/58//#testresult/a3a2a969c190aa66","status":"broken","statusDetails":"AttributeError: TXT","time":{"start":1666003383946,"stop":1666003385325,"duration":1379}},{"uid":"acf2775ed15fe8d6","reportUrl":"https://dmncmn.github.io/mic_spectrum_analyser/57//#testresult/acf2775ed15fe8d6","status":"broken","statusDetails":"AttributeError: TXT","time":{"start":1666002887889,"stop":1666002888673,"duration":784}},{"uid":"5b08cf45c59f8ee2","reportUrl":"https://dmncmn.github.io/mic_spectrum_analyser/56//#testresult/5b08cf45c59f8ee2","status":"failed","statusDetails":"AssertionError","time":{"start":1666002208661,"stop":1666002209832,"duration":1171}},{"uid":"fd98ebf5ff9a9633","reportUrl":"https://dmncmn.github.io/mic_spectrum_analyser/55//#testresult/fd98ebf5ff9a9633","status":"failed","statusDetails":"AssertionError","time":{"start":1666001753016,"stop":1666001753829,"duration":813}}]},"tags":[]},"source":"abb0c12222b4fd33.json","parameterValues":[]}