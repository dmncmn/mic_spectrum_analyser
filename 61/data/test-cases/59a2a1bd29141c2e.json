{"uid":"59a2a1bd29141c2e","name":"test_front_close_button","fullName":"tests.gui.test_front#test_front_close_button","historyId":"c16507a92b07ae1962ba5aef5ceb8172","time":{"start":1666004544928,"stop":1666004545758,"duration":830},"status":"failed","statusMessage":"AssertionError","statusTrace":"setup = None\n\n    @allure.feature('Test front')\n    @allure.story('Check that the window closes by click the close button')\n    def test_front_close_button(setup):\n    \n        with allure.step(\"Take a screenshot\"):\n            img = pyautogui.screenshot(screenshots[0], region=DEFAULT_APP_REGION)\n            allure_attach_screenshot(img)\n    \n        with allure.step(\"Click the close button\"):\n            pyautogui.click(get_new_position(DEFAULT_APP_REGION,\n                                             CLOSE_BUTTON_CLICK_POINT))\n    \n        with allure.step(\"Take a screenshot\"):\n            img = pyautogui.screenshot(screenshots[1], region=DEFAULT_APP_REGION)\n            allure_attach_screenshot(img)\n    \n        with allure.step(\"Compare screenshots\"):\n>           assert_screenshots(False)\n\ntests/gui/test_front.py:55: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/methods/utils.py:45: in assert_screenshots\n    raise e\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsame = False\n\n    def assert_screenshots(same: bool):\n        \"\"\" Assert screenshots pair and remove them \"\"\"\n        try:\n>           assert images_are_similar(*screenshots) is same\nE           AssertionError\n\ntests/methods/utils.py:43: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"setup","time":{"start":1666004543820,"stop":1666004544924,"duration":1104},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"status":"failed","statusMessage":"AssertionError","statusTrace":"setup = None\n\n    @allure.feature('Test front')\n    @allure.story('Check that the window closes by click the close button')\n    def test_front_close_button(setup):\n    \n        with allure.step(\"Take a screenshot\"):\n            img = pyautogui.screenshot(screenshots[0], region=DEFAULT_APP_REGION)\n            allure_attach_screenshot(img)\n    \n        with allure.step(\"Click the close button\"):\n            pyautogui.click(get_new_position(DEFAULT_APP_REGION,\n                                             CLOSE_BUTTON_CLICK_POINT))\n    \n        with allure.step(\"Take a screenshot\"):\n            img = pyautogui.screenshot(screenshots[1], region=DEFAULT_APP_REGION)\n            allure_attach_screenshot(img)\n    \n        with allure.step(\"Compare screenshots\"):\n>           assert_screenshots(False)\n\ntests/gui/test_front.py:55: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/methods/utils.py:45: in assert_screenshots\n    raise e\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsame = False\n\n    def assert_screenshots(same: bool):\n        \"\"\" Assert screenshots pair and remove them \"\"\"\n        try:\n>           assert images_are_similar(*screenshots) is same\nE           AssertionError\n\ntests/methods/utils.py:43: AssertionError","steps":[{"name":"Take a screenshot","time":{"start":1666004544928,"stop":1666004545290,"duration":362},"status":"passed","steps":[],"attachments":[{"uid":"f5c1152a19a248b6","name":"Screenshot","source":"f5c1152a19a248b6.png","type":"image/png","size":4681}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":false,"hasContent":true},{"name":"Click the close button","time":{"start":1666004545290,"stop":1666004545393,"duration":103},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Take a screenshot","time":{"start":1666004545393,"stop":1666004545737,"duration":344},"status":"passed","steps":[],"attachments":[{"uid":"26303153e600e058","name":"Screenshot","source":"26303153e600e058.png","type":"image/png","size":4681}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":false,"hasContent":true},{"name":"Compare screenshots","time":{"start":1666004545737,"stop":1666004545747,"duration":10},"status":"failed","statusMessage":"AssertionError\n","statusTrace":"  File \"/home/runner/work/mic_spectrum_analyser/mic_spectrum_analyser/tests/gui/test_front.py\", line 55, in test_front_close_button\n    assert_screenshots(False)\n  File \"/home/runner/work/mic_spectrum_analyser/mic_spectrum_analyser/tests/methods/utils.py\", line 45, in assert_screenshots\n    raise e\n  File \"/home/runner/work/mic_spectrum_analyser/mic_spectrum_analyser/tests/methods/utils.py\", line 43, in assert_screenshots\n    assert images_are_similar(*screenshots) is same\n","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true}],"attachments":[],"parameters":[],"stepsCount":4,"attachmentsCount":2,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"story","value":"Check that the window closes by click the close button"},{"name":"feature","value":"Test front"},{"name":"parentSuite","value":"tests.gui"},{"name":"suite","value":"test_front"},{"name":"host","value":"fv-az139-609"},{"name":"thread","value":"2910-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.gui.test_front"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":5,"broken":2,"skipped":0,"passed":0,"unknown":0,"total":7},"items":[{"uid":"9bbb8b3616dabd7","reportUrl":"https://dmncmn.github.io/mic_spectrum_analyser/60//#testresult/9bbb8b3616dabd7","status":"failed","statusDetails":"AssertionError","time":{"start":1666004098808,"stop":1666004099881,"duration":1073}},{"uid":"abb0c12222b4fd33","reportUrl":"https://dmncmn.github.io/mic_spectrum_analyser/59//#testresult/abb0c12222b4fd33","status":"failed","statusDetails":"AssertionError","time":{"start":1666003565920,"stop":1666003567278,"duration":1358}},{"uid":"a3a2a969c190aa66","reportUrl":"https://dmncmn.github.io/mic_spectrum_analyser/58//#testresult/a3a2a969c190aa66","status":"broken","statusDetails":"AttributeError: TXT","time":{"start":1666003383946,"stop":1666003385325,"duration":1379}},{"uid":"acf2775ed15fe8d6","reportUrl":"https://dmncmn.github.io/mic_spectrum_analyser/57//#testresult/acf2775ed15fe8d6","status":"broken","statusDetails":"AttributeError: TXT","time":{"start":1666002887889,"stop":1666002888673,"duration":784}},{"uid":"5b08cf45c59f8ee2","reportUrl":"https://dmncmn.github.io/mic_spectrum_analyser/56//#testresult/5b08cf45c59f8ee2","status":"failed","statusDetails":"AssertionError","time":{"start":1666002208661,"stop":1666002209832,"duration":1171}},{"uid":"fd98ebf5ff9a9633","reportUrl":"https://dmncmn.github.io/mic_spectrum_analyser/55//#testresult/fd98ebf5ff9a9633","status":"failed","statusDetails":"AssertionError","time":{"start":1666001753016,"stop":1666001753829,"duration":813}}]},"tags":[]},"source":"59a2a1bd29141c2e.json","parameterValues":[]}