{"uid":"77625ba61df16e24","name":"test_front_size_grip[200-100]","fullName":"tests.gui.test_front#test_front_size_grip","historyId":"bf883eb90b81d28287d53e5bf0be2213","time":{"start":1666004905444,"stop":1666004907563,"duration":2119},"status":"failed","statusMessage":"AssertionError","statusTrace":"setup = None, teardown = None, offset_x = 200, offset_y = 100\n\n    @allure.feature('Test front')\n    @allure.story('Check that the window size changes by SizeGrip')\n    @pytest.mark.parametrize(\"offset_x, offset_y\", [(200, 100), (-200, -100)])\n    def test_front_size_grip(setup, teardown, offset_x, offset_y):\n    \n        with allure.step(\"Take a screenshot\"):\n            img = pyautogui.screenshot(screenshots[0], region=DEFAULT_APP_REGION)\n            allure_attach_screenshot(img)\n    \n        with allure.step(\"Click and drag by SizeGrip\"):\n            size_grip_pos = get_new_position(DEFAULT_APP_REGION,\n                                             SIZE_GRIP_CLICK_POINT)\n            pyautogui.moveTo(size_grip_pos)\n            pyautogui.dragTo(get_new_position(size_grip_pos, (offset_x, offset_y)))\n    \n        with allure.step(\"Take a screenshot\"):\n            img = pyautogui.screenshot(screenshots[1], region=DEFAULT_APP_REGION)\n            allure_attach_screenshot(img)\n    \n        with allure.step(\"Compare screenshots\"):\n>           assert_screenshots(False)\n\ntests/gui/test_front.py:101: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/methods/utils.py:45: in assert_screenshots\n    raise e\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsame = False\n\n    def assert_screenshots(same: bool):\n        \"\"\" Assert screenshots pair and remove them \"\"\"\n        try:\n>           assert images_are_similar(*screenshots) is same\nE           AssertionError\n\ntests/methods/utils.py:43: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"setup","time":{"start":1666004904313,"stop":1666004905442,"duration":1129},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"teardown","time":{"start":1666004905442,"stop":1666004905442,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"status":"failed","statusMessage":"AssertionError","statusTrace":"setup = None, teardown = None, offset_x = 200, offset_y = 100\n\n    @allure.feature('Test front')\n    @allure.story('Check that the window size changes by SizeGrip')\n    @pytest.mark.parametrize(\"offset_x, offset_y\", [(200, 100), (-200, -100)])\n    def test_front_size_grip(setup, teardown, offset_x, offset_y):\n    \n        with allure.step(\"Take a screenshot\"):\n            img = pyautogui.screenshot(screenshots[0], region=DEFAULT_APP_REGION)\n            allure_attach_screenshot(img)\n    \n        with allure.step(\"Click and drag by SizeGrip\"):\n            size_grip_pos = get_new_position(DEFAULT_APP_REGION,\n                                             SIZE_GRIP_CLICK_POINT)\n            pyautogui.moveTo(size_grip_pos)\n            pyautogui.dragTo(get_new_position(size_grip_pos, (offset_x, offset_y)))\n    \n        with allure.step(\"Take a screenshot\"):\n            img = pyautogui.screenshot(screenshots[1], region=DEFAULT_APP_REGION)\n            allure_attach_screenshot(img)\n    \n        with allure.step(\"Compare screenshots\"):\n>           assert_screenshots(False)\n\ntests/gui/test_front.py:101: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/methods/utils.py:45: in assert_screenshots\n    raise e\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsame = False\n\n    def assert_screenshots(same: bool):\n        \"\"\" Assert screenshots pair and remove them \"\"\"\n        try:\n>           assert images_are_similar(*screenshots) is same\nE           AssertionError\n\ntests/methods/utils.py:43: AssertionError","steps":[{"name":"Take a screenshot","time":{"start":1666004905444,"stop":1666004906385,"duration":941},"status":"passed","steps":[],"attachments":[{"uid":"430d39f3556b5137","name":"Screenshot","source":"430d39f3556b5137.png","type":"image/png","size":4681}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":false,"hasContent":true},{"name":"Click and drag by SizeGrip","time":{"start":1666004906385,"stop":1666004906594,"duration":209},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Take a screenshot","time":{"start":1666004906595,"stop":1666004907495,"duration":900},"status":"passed","steps":[],"attachments":[{"uid":"992ed01c595940f","name":"Screenshot","source":"992ed01c595940f.png","type":"image/png","size":4681}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":false,"hasContent":true},{"name":"Compare screenshots","time":{"start":1666004907495,"stop":1666004907562,"duration":67},"status":"failed","statusMessage":"AssertionError\n","statusTrace":"  File \"/home/runner/work/mic_spectrum_analyser/mic_spectrum_analyser/tests/gui/test_front.py\", line 101, in test_front_size_grip\n    assert_screenshots(False)\n  File \"/home/runner/work/mic_spectrum_analyser/mic_spectrum_analyser/tests/methods/utils.py\", line 45, in assert_screenshots\n    raise e\n  File \"/home/runner/work/mic_spectrum_analyser/mic_spectrum_analyser/tests/methods/utils.py\", line 43, in assert_screenshots\n    assert images_are_similar(*screenshots) is same\n","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true}],"attachments":[],"parameters":[],"stepsCount":4,"attachmentsCount":2,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"teardown::0","time":{"start":1666004907622,"stop":1666004907735,"duration":113},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"feature","value":"Test front"},{"name":"story","value":"Check that the window size changes by SizeGrip"},{"name":"parentSuite","value":"tests.gui"},{"name":"suite","value":"test_front"},{"name":"host","value":"fv-az380-883"},{"name":"thread","value":"2827-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.gui.test_front"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"offset_x","value":"200"},{"name":"offset_y","value":"100"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":6,"broken":2,"skipped":0,"passed":0,"unknown":0,"total":8},"items":[{"uid":"c8540685175a76df","reportUrl":"https://dmncmn.github.io/mic_spectrum_analyser/61//#testresult/c8540685175a76df","status":"failed","statusDetails":"AssertionError","time":{"start":1666004551914,"stop":1666004553506,"duration":1592}},{"uid":"e47fbaebdf181dd2","reportUrl":"https://dmncmn.github.io/mic_spectrum_analyser/60//#testresult/e47fbaebdf181dd2","status":"failed","statusDetails":"AssertionError","time":{"start":1666004106654,"stop":1666004108401,"duration":1747}},{"uid":"3bec8d0b56fa728d","reportUrl":"https://dmncmn.github.io/mic_spectrum_analyser/59//#testresult/3bec8d0b56fa728d","status":"failed","statusDetails":"AssertionError","time":{"start":1666003574574,"stop":1666003576686,"duration":2112}},{"uid":"6b24c6178e02f5f6","reportUrl":"https://dmncmn.github.io/mic_spectrum_analyser/58//#testresult/6b24c6178e02f5f6","status":"broken","statusDetails":"AttributeError: TXT","time":{"start":1666003392856,"stop":1666003394971,"duration":2115}},{"uid":"50fc050b0a77d7b4","reportUrl":"https://dmncmn.github.io/mic_spectrum_analyser/57//#testresult/50fc050b0a77d7b4","status":"broken","statusDetails":"AttributeError: TXT","time":{"start":1666002895359,"stop":1666002897033,"duration":1674}},{"uid":"8cadc3b17279d32e","reportUrl":"https://dmncmn.github.io/mic_spectrum_analyser/56//#testresult/8cadc3b17279d32e","status":"failed","statusDetails":"AssertionError","time":{"start":1666002217022,"stop":1666002218886,"duration":1864}},{"uid":"b29b09a2418ca138","reportUrl":"https://dmncmn.github.io/mic_spectrum_analyser/55//#testresult/b29b09a2418ca138","status":"failed","statusDetails":"AssertionError","time":{"start":1666001772220,"stop":1666001773905,"duration":1685}}]},"tags":[]},"source":"77625ba61df16e24.json","parameterValues":["200","100"]}