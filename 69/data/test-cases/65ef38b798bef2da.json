{"uid":"65ef38b798bef2da","name":"test_front_close_button","fullName":"tests.gui.test_front#test_front_close_button","historyId":"c16507a92b07ae1962ba5aef5ceb8172","time":{"start":1666104162265,"stop":1666104162646,"duration":381},"status":"failed","statusMessage":"AssertionError","statusTrace":"setup = None\n\n    @allure.feature('Test front')\n    @allure.story('Check that the window closes by click the close button')\n    def test_front_close_button(setup):\n    \n        with allure.step(\"Take a screenshot\"):\n            img = pyautogui.screenshot(screenshots[0], region=p.DEFAULT_APP_REGION)\n            allure_attach_screenshot(img)\n    \n        with allure.step(\"Click the close button\"):\n            pyautogui.click(get_new_position(p.DEFAULT_APP_REGION,\n                                             p.CLOSE_BUTTON_CLICK_POINT))\n    \n        with allure.step(\"Take a screenshot\"):\n            img = pyautogui.screenshot(screenshots[1], region=p.DEFAULT_APP_REGION)\n            allure_attach_screenshot(img)\n    \n        with allure.step(\"Compare screenshots\"):\n>           assert_screenshots(False)\n\ntests/gui/test_front.py:57: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/methods/utils.py:45: in assert_screenshots\n    raise e\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsame = False\n\n    def assert_screenshots(same: bool) -> Optional[NoReturn]:\n        \"\"\" Assert screenshots pair and remove them \"\"\"\n        try:\n>           assert images_are_similar(*screenshots) is same\nE           AssertionError\n\ntests/methods/utils.py:43: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"setup","time":{"start":1666104161159,"stop":1666104162264,"duration":1105},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"status":"failed","statusMessage":"AssertionError","statusTrace":"setup = None\n\n    @allure.feature('Test front')\n    @allure.story('Check that the window closes by click the close button')\n    def test_front_close_button(setup):\n    \n        with allure.step(\"Take a screenshot\"):\n            img = pyautogui.screenshot(screenshots[0], region=p.DEFAULT_APP_REGION)\n            allure_attach_screenshot(img)\n    \n        with allure.step(\"Click the close button\"):\n            pyautogui.click(get_new_position(p.DEFAULT_APP_REGION,\n                                             p.CLOSE_BUTTON_CLICK_POINT))\n    \n        with allure.step(\"Take a screenshot\"):\n            img = pyautogui.screenshot(screenshots[1], region=p.DEFAULT_APP_REGION)\n            allure_attach_screenshot(img)\n    \n        with allure.step(\"Compare screenshots\"):\n>           assert_screenshots(False)\n\ntests/gui/test_front.py:57: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/methods/utils.py:45: in assert_screenshots\n    raise e\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsame = False\n\n    def assert_screenshots(same: bool) -> Optional[NoReturn]:\n        \"\"\" Assert screenshots pair and remove them \"\"\"\n        try:\n>           assert images_are_similar(*screenshots) is same\nE           AssertionError\n\ntests/methods/utils.py:43: AssertionError","steps":[{"name":"Take a screenshot","time":{"start":1666104162266,"stop":1666104162401,"duration":135},"status":"passed","steps":[],"attachments":[{"uid":"88dd699d68a74154","name":"Screenshot","source":"88dd699d68a74154.png","type":"image/png","size":4681}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":false,"hasContent":true},{"name":"Click the close button","time":{"start":1666104162401,"stop":1666104162503,"duration":102},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Take a screenshot","time":{"start":1666104162503,"stop":1666104162638,"duration":135},"status":"passed","steps":[],"attachments":[{"uid":"acd86cae261d132c","name":"Screenshot","source":"acd86cae261d132c.png","type":"image/png","size":4681}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":false,"hasContent":true},{"name":"Compare screenshots","time":{"start":1666104162638,"stop":1666104162645,"duration":7},"status":"failed","statusMessage":"AssertionError\n","statusTrace":"  File \"/home/runner/work/mic_spectrum_analyser/mic_spectrum_analyser/tests/gui/test_front.py\", line 57, in test_front_close_button\n    assert_screenshots(False)\n  File \"/home/runner/work/mic_spectrum_analyser/mic_spectrum_analyser/tests/methods/utils.py\", line 45, in assert_screenshots\n    raise e\n  File \"/home/runner/work/mic_spectrum_analyser/mic_spectrum_analyser/tests/methods/utils.py\", line 43, in assert_screenshots\n    assert images_are_similar(*screenshots) is same\n","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true}],"attachments":[],"parameters":[],"stepsCount":4,"attachmentsCount":2,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"setup::0","time":{"start":1666104162652,"stop":1666104162655,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"story","value":"Check that the window closes by click the close button"},{"name":"feature","value":"Test front"},{"name":"parentSuite","value":"tests.gui"},{"name":"suite","value":"test_front"},{"name":"host","value":"fv-az456-963"},{"name":"thread","value":"2820-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.gui.test_front"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":3,"unknown":0,"total":4},"items":[{"uid":"6c7fb3e3596d0bfa","reportUrl":"https://dmncmn.github.io/mic_spectrum_analyser/67//#testresult/6c7fb3e3596d0bfa","status":"passed","time":{"start":1666031132730,"stop":1666031134000,"duration":1270}},{"uid":"9f60923a85359580","reportUrl":"https://dmncmn.github.io/mic_spectrum_analyser/66//#testresult/9f60923a85359580","status":"passed","time":{"start":1666030979204,"stop":1666030979992,"duration":788}},{"uid":"96d6a33063c682fb","reportUrl":"https://dmncmn.github.io/mic_spectrum_analyser/65//#testresult/96d6a33063c682fb","status":"passed","time":{"start":1666030680333,"stop":1666030681027,"duration":694}}]},"tags":[]},"source":"65ef38b798bef2da.json","parameterValues":[]}