{"uid":"39fc34243ec29386","name":"test_front_close_button","fullName":"tests.gui.test_front#test_front_close_button","historyId":"c16507a92b07ae1962ba5aef5ceb8172","time":{"start":1666104545447,"stop":1666104545884,"duration":437},"status":"failed","statusMessage":"AssertionError","statusTrace":"setup = None\n\n    @allure.feature('Test front')\n    @allure.story('Check that the window closes by click the close button')\n    def test_front_close_button(setup):\n    \n        with allure.step(\"Take a screenshot\"):\n            img = pyautogui.screenshot(screenshots[0], region=p.DEFAULT_APP_REGION)\n            allure_attach_screenshot(img)\n    \n        with allure.step(\"Click the close button\"):\n            pyautogui.click(get_new_position(p.DEFAULT_APP_REGION,\n                                             p.CLOSE_BUTTON_CLICK_POINT))\n    \n        with allure.step(\"Take a screenshot\"):\n            img = pyautogui.screenshot(screenshots[1], region=p.DEFAULT_APP_REGION)\n            allure_attach_screenshot(img)\n    \n        with allure.step(\"Compare screenshots\"):\n>           assert_screenshots(False)\n\ntests/gui/test_front.py:57: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/methods/utils.py:45: in assert_screenshots\n    raise e\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsame = False\n\n    def assert_screenshots(same: bool) -> Optional[NoReturn]:\n        \"\"\" Assert screenshots pair and remove them \"\"\"\n        try:\n>           assert images_are_similar(*screenshots) is same\nE           AssertionError\n\ntests/methods/utils.py:43: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"setup","time":{"start":1666104544339,"stop":1666104545446,"duration":1107},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"status":"failed","statusMessage":"AssertionError","statusTrace":"setup = None\n\n    @allure.feature('Test front')\n    @allure.story('Check that the window closes by click the close button')\n    def test_front_close_button(setup):\n    \n        with allure.step(\"Take a screenshot\"):\n            img = pyautogui.screenshot(screenshots[0], region=p.DEFAULT_APP_REGION)\n            allure_attach_screenshot(img)\n    \n        with allure.step(\"Click the close button\"):\n            pyautogui.click(get_new_position(p.DEFAULT_APP_REGION,\n                                             p.CLOSE_BUTTON_CLICK_POINT))\n    \n        with allure.step(\"Take a screenshot\"):\n            img = pyautogui.screenshot(screenshots[1], region=p.DEFAULT_APP_REGION)\n            allure_attach_screenshot(img)\n    \n        with allure.step(\"Compare screenshots\"):\n>           assert_screenshots(False)\n\ntests/gui/test_front.py:57: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/methods/utils.py:45: in assert_screenshots\n    raise e\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsame = False\n\n    def assert_screenshots(same: bool) -> Optional[NoReturn]:\n        \"\"\" Assert screenshots pair and remove them \"\"\"\n        try:\n>           assert images_are_similar(*screenshots) is same\nE           AssertionError\n\ntests/methods/utils.py:43: AssertionError","steps":[{"name":"Take a screenshot","time":{"start":1666104545448,"stop":1666104545609,"duration":161},"status":"passed","steps":[],"attachments":[{"uid":"21d93ce0752c534b","name":"Screenshot","source":"21d93ce0752c534b.png","type":"image/png","size":4681}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":false,"hasContent":true},{"name":"Click the close button","time":{"start":1666104545609,"stop":1666104545711,"duration":102},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Take a screenshot","time":{"start":1666104545711,"stop":1666104545876,"duration":165},"status":"passed","steps":[],"attachments":[{"uid":"b4b3def44e88b6e6","name":"Screenshot","source":"b4b3def44e88b6e6.png","type":"image/png","size":4681}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":false,"hasContent":true},{"name":"Compare screenshots","time":{"start":1666104545876,"stop":1666104545884,"duration":8},"status":"failed","statusMessage":"AssertionError\n","statusTrace":"  File \"/home/runner/work/mic_spectrum_analyser/mic_spectrum_analyser/tests/gui/test_front.py\", line 57, in test_front_close_button\n    assert_screenshots(False)\n  File \"/home/runner/work/mic_spectrum_analyser/mic_spectrum_analyser/tests/methods/utils.py\", line 45, in assert_screenshots\n    raise e\n  File \"/home/runner/work/mic_spectrum_analyser/mic_spectrum_analyser/tests/methods/utils.py\", line 43, in assert_screenshots\n    assert images_are_similar(*screenshots) is same\n","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true}],"attachments":[],"parameters":[],"stepsCount":4,"attachmentsCount":2,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"setup::0","time":{"start":1666104545892,"stop":1666104545892,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"feature","value":"Test front"},{"name":"story","value":"Check that the window closes by click the close button"},{"name":"parentSuite","value":"tests.gui"},{"name":"suite","value":"test_front"},{"name":"host","value":"fv-az571-172"},{"name":"thread","value":"2845-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.gui.test_front"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":2,"broken":0,"skipped":0,"passed":3,"unknown":0,"total":5},"items":[{"uid":"65ef38b798bef2da","reportUrl":"https://dmncmn.github.io/mic_spectrum_analyser/69//#testresult/65ef38b798bef2da","status":"failed","statusDetails":"AssertionError","time":{"start":1666104162265,"stop":1666104162646,"duration":381}},{"uid":"6c7fb3e3596d0bfa","reportUrl":"https://dmncmn.github.io/mic_spectrum_analyser/67//#testresult/6c7fb3e3596d0bfa","status":"passed","time":{"start":1666031132730,"stop":1666031134000,"duration":1270}},{"uid":"9f60923a85359580","reportUrl":"https://dmncmn.github.io/mic_spectrum_analyser/66//#testresult/9f60923a85359580","status":"passed","time":{"start":1666030979204,"stop":1666030979992,"duration":788}},{"uid":"96d6a33063c682fb","reportUrl":"https://dmncmn.github.io/mic_spectrum_analyser/65//#testresult/96d6a33063c682fb","status":"passed","time":{"start":1666030680333,"stop":1666030681027,"duration":694}}]},"tags":[]},"source":"39fc34243ec29386.json","parameterValues":[]}